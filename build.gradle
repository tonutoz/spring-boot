plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
}

allprojects {
    group = 'org.example.tonutoz'
    version = '1.0-SNAPSHOT'

    repositories {
        mavenLocal()
        mavenCentral()
    }

}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        compileOnly 'org.projectlombok:lombok'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'

        testImplementation platform('org.junit:junit-bom:5.9.1')
        testImplementation 'org.junit.jupiter:junit-jupiter'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-aop'
        implementation 'org.springframework.boot:spring-boot-starter-web'
    }

    test {
        useJUnitPlatform()
    }
}


project(':spring-boot-java') { // 컴파일 시 common 로딩
    dependencies {
        compileOnly project(':spring-boot-common')
    }
}

project(':spring-boot-common') { // common은  bootJar로 패키징 할 필요 없음
    bootJar { enabled = false }
    jar { enabled = true }
}


bootJar.enabled = false